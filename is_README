allocation instruction packet format:
        inst_valid |  rs    |  rd   |  rt   | imm_valid_bit | ...| RegWr | preg
          55         54-50    49-45   44-40      39 --------------- 7      6-0

isq_lin: output format
         wat | inst 
         56    55-0

isq: isq will add idx to the output of isq_lin so the output becomes ( input to tpu )
         idx | wat | inst
        62-57  56    55-0
        
tpu: output format (input to pdc)
idx | wat |  inst_valid | psrc1 | psrc2 | imm_valid| imm | LDI | brn | jmp_valid_bit | jump |... |add| mult |addr| invtRt | RegWrite| pr_valid | pr_number
61-56  55       54         53-47   46-40     39     38-23  22   21-20   19            18-17 ------11   10     9     8         7         6          5-0
        
        physical register to be freed is output in a separate fre_preg signal

pdc: supposed output (need to change pdc)
     inst_valid | idx  | psrc1 | psrc2 | pdest | imm_valid_bit | .....| RegWr | freeReg
        65       64-59   58-52   51-45   44-39   38              37-7    6       5-0

     regWr signals is the valid bit for both pdest and freeReg



is stage tb input inst components:

        inst_valid =0;
        Rs_valid_bit=0;
        Rs=0;
        Rd_valid_bit=0;
        Rd=0;
        Rt_valid_bit=0;
        Rt=0;
        imm_valid_bit=0;
        imme=0;
        LDI=0;
        brn=0;
        jmp_valid_bit=0;
        jump=0;
        MemRd=0;
        MemWr=0;
        ALU_ctrl=0;
        ALU_to_adder=0;
        ALU_to_mult=0;
        ALU_to_addr=0;
        invtRt=0;
        RegWr=0;
        pr_valid=0;
        pr_number=0;     