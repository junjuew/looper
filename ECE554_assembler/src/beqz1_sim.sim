
next inst: ldi r2, 2	    	 // set r2 to 2
current inst: ldi r1, 1            // set r1 to 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0000 decimal: 0
R3: hex: 0000 decimal: 0
R4: hex: 0000 decimal: 0
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: ldi r4, 4			 // set r4 to 4
current inst: ldi r2, 2	    	 // set r2 to 2
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0000 decimal: 0
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: sub r3, r1, r2       // r3 = r1 - r2 = -1
current inst: ldi r4, 4			 // set r4 to 4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: beqz r3, .label1     // it will not do branch here
current inst: sub r3, r1, r2       // r3 = r1 - r2 = -1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: fffffff decimal: -1
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: AssemblyLine@11cfb549
current inst: beqz r3, .label1     // it will not do branch here
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: fffffff decimal: -1
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: beqz r3, .label1     // it will not do branch here
current inst: add r3, r3, r2       // r3 = r3 + r2 = 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0001 decimal: 1
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: AssemblyLine@5b86d4c1
current inst: beqz r3, .label1     // it will not do branch here
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0001 decimal: 1
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: beqz r3, .label1     // it will do branch here
current inst: sub r3, r3, r1       // set r3 = r3 - r1 = 0
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: ldi r1, 2            // set r1 to 2
current inst: beqz r3, .label1     // it will do branch here
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0001 decimal: 1
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: ldi r2, 2	     	 // set r2 to 2
current inst: ldi r1, 2            // set r1 to 2
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0002 decimal: 2
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: sub r3, r1, r2		 // r3 = 0
current inst: ldi r2, 2	     	 // set r2 to 2
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0002 decimal: 2
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: beqz r3, .label2     // it will do branch here
current inst: sub r3, r1, r2		 // r3 = 0
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0002 decimal: 2
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: add r4, r4, r1       //if the beqz above brance, r4 will be 6
current inst: beqz r3, .label2     // it will do branch here
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0002 decimal: 2
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0004 decimal: 4
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: ldi r1, 0
current inst: add r4, r4, r1       //if the beqz above brance, r4 will be 6
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0002 decimal: 2
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0006 decimal: 6
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0

next inst: //jr r1, 0
current inst: ldi r1, 0
***********************************
*******   View registers   ********
***********************************
R0: hex: 0000 decimal: 0
R1: hex: 0000 decimal: 0
R2: hex: 0002 decimal: 2
R3: hex: 0000 decimal: 0
R4: hex: 0006 decimal: 6
R5: hex: 0000 decimal: 0
R6: hex: 0000 decimal: 0
R7: hex: 0000 decimal: 0
R8: hex: 0000 decimal: 0
R9: hex: 0000 decimal: 0
R10: hex: 0000 decimal: 0
R11: hex: 0000 decimal: 0
R12: hex: 0000 decimal: 0
R13: hex: 0000 decimal: 0
R14: hex: 0000 decimal: 0
R15: hex: 0000 decimal: 0
current inst: //jr r1, 0
Executed instruction #: 15
