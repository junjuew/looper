
next inst: ldi r2, 9	// r2 <-64, r2 contains C
current inst: ldi r1,	0		// r1 will be the division counter and memory base index
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 0 decimal: 0
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r2, r1	// r3 = r2, r3 will always be a copy of r2
current inst: ldi r2, 9	// r2 <-64, r2 contains C
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r4, 1		// r4 will serve as x(n)
current inst: add r3, r2, r1	// r3 = r2, r3 will always be a copy of r2
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r5, 0		// r5 will serve as x(n+1)
current inst: ldi r4, 1		// r4 will serve as x(n)
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r6, 1		// constant 1
current inst: ldi r5, 0		// r5 will serve as x(n+1)
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r8, 0		// constant 0
current inst: ldi r6, 1		// constant 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: 
current inst: ldi r8, 0		// constant 0
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: 
current inst: // main program
current inst: .main_start:

next inst: .divide_start:
current inst: add r1, r8, r8	// reset r1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: .divide_start:

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 8 decimal: 8
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 8 decimal: 8
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 8 decimal: 8
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 8 decimal: 8
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 7 decimal: 7
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 7 decimal: 7
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 7 decimal: 7
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 7 decimal: 7
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 5 decimal: 5
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 5 decimal: 5
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 9 decimal: 9
R3: hex: 5 decimal: 5
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 9 decimal: 9
R3: hex: 5 decimal: 5
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 2 decimal: 2
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 2 decimal: 2
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 9 decimal: 9
R3: hex: 2 decimal: 2
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 9 decimal: 9
R3: hex: 2 decimal: 2
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 9 decimal: 9
R3: hex: 1 decimal: 1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 9 decimal: 9
R3: hex: 1 decimal: 1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 9 decimal: 9
R3: hex: 1 decimal: 1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 9 decimal: 9
R3: hex: 1 decimal: 1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
current inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 1 decimal: 1
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
current inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 1 decimal: 1
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r7, r5, r4
current inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: beqz	r7, .main_end
current inst: sub r7, r5, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: AssemblyLine@c3bb2b8
current inst: beqz	r7, .main_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 1 decimal: 1
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.main_start
current inst: add r4, r5, r8	// r4 = r5 + 0 = r5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r8, r8	// reset r1
current inst: j		.main_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: .divide_start:
current inst: add r1, r8, r8	// reset r1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: .divide_start:

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 4 decimal: 4
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
current inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 5 decimal: 5
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
current inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: ffffffff decimal: -1
R4: hex: 5 decimal: 5
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r7, r5, r4
current inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: 4 decimal: 4
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: beqz	r7, .main_end
current inst: sub r7, r5, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: AssemblyLine@c3bb2b8
current inst: beqz	r7, .main_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 5 decimal: 5
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.main_start
current inst: add r4, r5, r8	// r4 = r5 + 0 = r5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r8, r8	// reset r1
current inst: j		.main_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: .divide_start:
current inst: add r1, r8, r8	// reset r1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: .divide_start:

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 6 decimal: 6
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 3 decimal: 3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// increment counter
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: j		.divide_start
current inst: add r1, r1, r6	// increment counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r3, r3, r4
current inst: j		.divide_start
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: 0 decimal: 0
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bltz	r3, .divide_end
current inst: sub r3, r3, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: fffffffd decimal: -3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
current inst: bltz	r3, .divide_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 9 decimal: 9
R3: hex: fffffffd decimal: -3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
current inst: add r1, r1, r4	// r1 = r1 + r4 = C / x(n) + x (n)
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: fffffffd decimal: -3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
current inst: sra r5, r1, r6	// r5 = r1 >> 1 = r1 / 2 ==> x(n+1) = 1/2 * [x(n) + C / x(n)]
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: fffffffd decimal: -3
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r7, r5, r4
current inst: add r3, r2, r8	// reset r3, so that r3 = r2 = C again
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: fffffffe decimal: -2
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: beqz	r7, .main_end
current inst: sub r7, r5, r4
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r5, r8	// r5 = r5 + 0 = r5
current inst: beqz	r7, .main_end
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: 
current inst: add	r5, r5, r8	// r5 = r5 + 0 = r5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 9 decimal: 9
R3: hex: 9 decimal: 9
R4: hex: 3 decimal: 3
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: 
Executed instruction #: 88
