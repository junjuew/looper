
next inst: ldi r2, 0		// this would be prev number1
current inst: ldi r1, 0		// this would be the counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 0 decimal: 0
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r3, 1 		// this would be prev number2
current inst: ldi r2, 0		// this would be prev number1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 0 decimal: 0
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r4, 0		// constant 0
current inst: ldi r3, 1 		// this would be prev number2
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r6, 1 		// constant 1
current inst: ldi r4, 0		// constant 0
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 0 decimal: 0
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: ldi r7, 11		// constant 11
current inst: ldi r6, 1 		// constant 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: 0 decimal: 0
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: .loop_start:
current inst: ldi r7, 11		// constant 11
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 0 decimal: 0
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
current inst: .loop_start:

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 0 decimal: 0
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 0 decimal: 0
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 1 decimal: 1
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 1 decimal: 1
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 1 decimal: 1
R2: hex: 1 decimal: 1
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 1 decimal: 1
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: a decimal: 10
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 1 decimal: 1
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 1 decimal: 1
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 2 decimal: 2
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 1 decimal: 1
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 2 decimal: 2
R3: hex: 2 decimal: 2
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 2 decimal: 2
R2: hex: 2 decimal: 2
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 2 decimal: 2
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 9 decimal: 9
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 2 decimal: 2
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 2 decimal: 2
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 3 decimal: 3
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 2 decimal: 2
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 3 decimal: 3
R3: hex: 3 decimal: 3
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 3 decimal: 3
R2: hex: 3 decimal: 3
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 3 decimal: 3
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 8 decimal: 8
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 3 decimal: 3
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 3 decimal: 3
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 5 decimal: 5
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 3 decimal: 3
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 5 decimal: 5
R3: hex: 5 decimal: 5
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 4 decimal: 4
R2: hex: 5 decimal: 5
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 5 decimal: 5
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 7 decimal: 7
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 5 decimal: 5
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 5 decimal: 5
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: 8 decimal: 8
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 5 decimal: 5
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 8 decimal: 8
R3: hex: 8 decimal: 8
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 5 decimal: 5
R2: hex: 8 decimal: 8
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 8 decimal: 8
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 6 decimal: 6
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 8 decimal: 8
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 8 decimal: 8
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: d decimal: 13
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: 8 decimal: 8
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: d decimal: 13
R3: hex: d decimal: 13
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 6 decimal: 6
R2: hex: d decimal: 13
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: d decimal: 13
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 5 decimal: 5
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: d decimal: 13
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: d decimal: 13
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 15 decimal: 21
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: d decimal: 13
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 15 decimal: 21
R3: hex: 15 decimal: 21
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 7 decimal: 7
R2: hex: 15 decimal: 21
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 15 decimal: 21
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 4 decimal: 4
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 15 decimal: 21
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 15 decimal: 21
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 22 decimal: 34
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 15 decimal: 21
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 22 decimal: 34
R3: hex: 22 decimal: 34
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 8 decimal: 8
R2: hex: 22 decimal: 34
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 22 decimal: 34
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 3 decimal: 3
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 22 decimal: 34
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 22 decimal: 34
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 37 decimal: 55
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 22 decimal: 34
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 37 decimal: 55
R3: hex: 37 decimal: 55
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: 9 decimal: 9
R2: hex: 37 decimal: 55
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 37 decimal: 55
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 2 decimal: 2
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 37 decimal: 55
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add	r5, r2, r3	// generate the next Fibonacci number
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 37 decimal: 55
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 59 decimal: 89
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r2, r3, r4	// update prev number 1
current inst: add	r5, r2, r3	// generate the next Fibonacci number
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 37 decimal: 55
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r3, r5, r4	// update prev number 5
current inst: add r2, r3, r4	// update prev number 1
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 59 decimal: 89
R3: hex: 59 decimal: 89
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r1, r1, r6	// update counter
current inst: add r3, r5, r4	// update prev number 5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: a decimal: 10
R2: hex: 59 decimal: 89
R3: hex: 90 decimal: 144
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: sub r8, r7, r1	// check counter
current inst: add r1, r1, r6	// update counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: b decimal: 11
R2: hex: 59 decimal: 89
R3: hex: 90 decimal: 144
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 1 decimal: 1
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
current inst: sub r8, r7, r1	// check counter
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: b decimal: 11
R2: hex: 59 decimal: 89
R3: hex: 90 decimal: 144
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: add r5, r5, r4	// else r5 = r5
current inst: bgtz	r8, .loop_start	// branch if not reaching 11 times
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: b decimal: 11
R2: hex: 59 decimal: 89
R3: hex: 90 decimal: 144
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0

next inst: end
current inst: add r5, r5, r4	// else r5 = r5
***********************************
*******   View registers   ********
***********************************
R0: hex: 0 decimal: 0
R1: hex: b decimal: 11
R2: hex: 59 decimal: 89
R3: hex: 90 decimal: 144
R4: hex: 0 decimal: 0
R5: hex: 90 decimal: 144
R6: hex: 1 decimal: 1
R7: hex: b decimal: 11
R8: hex: 0 decimal: 0
R9: hex: 0 decimal: 0
R10: hex: 0 decimal: 0
R11: hex: 0 decimal: 0
R12: hex: 0 decimal: 0
R13: hex: 0 decimal: 0
R14: hex: 0 decimal: 0
R15: hex: 0 decimal: 0
Executed instruction #: 73
